#!/usr/bin/env php
<?php

/*    Usage:  ./gtunnel start     #for starting or reload all tunnels that will remains open
              ./gtunnel kill      #for killing all tunnels
	
      see www.gioexperience.com for more details
*/

$ip_server="";
$user = "";
$password = "";

$tunnels=array(
	array("192.168.0.1",80,17080),		//silvano web
);

/* ********************************************************************************************************************* */


function port_test($ip, $port) 
{
	$fp = @fsockopen($ip, $port, $errno, $errstr, 0.1);
	if (!$fp) {
		return false;
	} else {
		fclose($fp);
		return true;
	}
}


if( $argc>1 && $argv[1]=="start_single" )				//for internl use only
{
	//internal usage --->    ./gtunnel start_single    $host_in_lan    $portalocale    $portaremota
	$host_in_lan=$argv[2];
	$localport=$argv[3];
	$remoteport=$argv[4];
	
	while(true)
	{
		echo "Start tunnel for {$host_in_lan}:{$localport}. Exposed on server $ip_server at port $remoteport\n";
		$cmd="/usr/bin/sshpass -p '$password' /usr/bin/ssh -o ServerAliveInterval=30 -o ServerAliveCountMax=1 -N -R {$ip_server}:{$remoteport}:{$host_in_lan}:{$localport} {$user}@{$ip_server}";
		echo "exec] $cmd \n";
		exec($cmd);
		echo "..tunnel crashed\n";
	}
	die();
}
elseif( $argc>1 && $argv[1]=="kill" )
{
	//kill gtunnel process on specific port
	$remoteport=intval($argv[2]);
	
	$tun=null;
	foreach($tunnels as $tunnel)
		if( $tunnel[2]==$remoteport ) $tun=$tunnel;
	
	
	echo "Kill tunnel on remote port $remoteport\n";

	$cmd="pkill -f 'gtunnel start_single ".$tun[0]." ".$tun[1]." ".$tun[2]."'";
	echo "$cmd\n";
	exec($cmd);

	$cmd="pkill -f '{$ip_server}:{$remoteport}'";
	echo "$cmd\n";
	exec($cmd);
	die();
}
elseif( $argc>1 && $argv[1]=="killall" )
{
	//kill all gtunnel
	echo "Kill all tunnel\n";
	exec("pkill -f '/usr/bin/sshpass'");
	exec("pkill -f '/usr/bin/ssh'");
	exec("pkill -f 'gtunnel'");
	die();
}

elseif( $argc>1 && $argv[1]=="start" )
{
	echo "Test all tunnels...\n";
	foreach ($tunnels as $tunnel)
	{
		$localip=$tunnel[0];
		$localport=$tunnel[1];
		$remoteport=$tunnel[2];

		$b=port_test($ip_server,$remoteport);
		if( $b==false )
		{
			echo "Tunnel on $remoteport down. It's crashed?\n";
			exec(__FILE__." kill $remoteport");

			
			echo "Starting tunnel from $localip:$localport and expose on $ip_server:$remoteport...\n";
			$cmd=__FILE__." start_single $localip $localport $remoteport";
			echo "exec] $cmd \n";
			shell_exec("$cmd > /dev/null &");
			sleep(5);
		}
		else
			echo "Tunnel on $remoteport is up! Do nothing...\n";
	}

	echo "Tunnels reloaded...\n\n";
}
else
{
	echo "\n";
	echo "Usage:  ./gtunnel start     #for starting or reload all tunnels that will remains open\n";
	echo "        ./gtunnel kill      #for killing all tunnels\n";
	echo "\n";
	die();
}


?>
